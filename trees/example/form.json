{"v":0.1,"active_step":13,"name":"","preview_type":0,"steps":[{"active_editor":0,"description":"<p>Решим задачу описания зависимой формы. Определённые поля должны включаться или отключаться в зависимости от того, включен ли родительский элемент</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":21,"column":13},"end":{"row":21,"column":13}}],"js":[{"start":{"row":1,"column":0},"end":{"row":1,"column":0}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Для начала опишем дерево зависимостей. Каждому узлу в дереве будет соответствовать DOM-элемент, а элементы, зависимые от него будут указаны как дочерние</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    \n  ]\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":6,"column":4},"end":{"row":6,"column":4}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Для начала опишем дерево зависимостей. Каждому узлу в дереве будет соответствовать DOM-элемент, а элементы, зависимые от него будут указаны как дочерние</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }\n  ]\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":9,"column":5},"end":{"row":9,"column":5}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Для начала опишем дерево зависимостей. Каждому узлу в дереве будет соответствовать DOM-элемент, а элементы, зависимые от него будут указаны как дочерние</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }\n  ]\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":13,"column":5},"end":{"row":13,"column":5}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Для начала опишем дерево зависимостей. Каждому узлу в дереве будет соответствовать DOM-элемент, а элементы, зависимые от него будут указаны как дочерние</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: []\n    }\n  ]\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":16,"column":17},"end":{"row":16,"column":17}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Для начала опишем дерево зависимостей. Каждому узлу в дереве будет соответствовать DOM-элемент, а элементы, зависимые от него будут указаны как дочерние</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":19,"column":24},"end":{"row":19,"column":24}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Теперь напишем так называемую функцию-визитор. Функция будет обходить дерево в определённом порядке. В нашем случае достаточно прямого обхода в глубину: после посещения элемента, мы будем сразу переходить к его потомкам</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Само «посещение» будет представлять собой включение или выключение поля в зависимости от состояния родительского элемента</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node.name];\n  var parentElement = parent ? document.forms[0][parent.name] : null;\n\n  parent && (formElement.disabled = !parentElement.checked || parentElement.disabled);\n\n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":31,"column":86},"end":{"row":31,"column":86}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Полученная функция — слишком частное решение, но оно идеально подходит для примера. В промышленном коде, как правило, проще написать стандартную функцию-визитор, где действие при посещении элемента описывается колбэком</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node.name];\n  var parentElement = parent ? document.forms[0][parent.name] : null;\n  \n  parent && (formElement.disabled = !parentElement.checked || parentElement.disabled);\n\n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":28,"column":0},"end":{"row":32,"column":0}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Теперь, чтобы установить начальное состояние формы и проверить работоспособность визитора, запустим функцию на корневом элементе дерева</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node.name];\n  var parentElement = parent ? document.forms[0][parent.name] : null;\n  \n  parent && (formElement.disabled = !parentElement.checked || parentElement.disabled);\n  \n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n\n\npreorder(formDeps, null);\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":41,"column":25},"end":{"row":41,"column":25}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Теперь мы можем описать реакцию на изменение формы пользователем. В самом простом случае достаточно запустить визитор по всему дереву при любом изменении формы</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node.name];\n  var parentElement = parent ? document.forms[0][parent.name] : null;\n  \n  parent && (formElement.disabled = !parentElement.checked || parentElement.disabled);\n  \n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n\n\npreorder(formDeps, null);\n\n\ndocument.forms[0].onchange = function() {\n  preorder(formDeps, null);\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":45,"column":27},"end":{"row":45,"column":27}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Обратите внимание, что дерево — рекурсивная структура, фактически каждый узел тоже является деревом. Обычно их называют «поддеревьями». Рекурсивность дерева даёт возможность запускать обход начиная с любого узла дерева, поэтому для оптимизации функции, например, если мы имеем дело с большой формой, можно написать функцию, которая по изменению узла начинает обход с него, минуя родительские</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  name: 'v1',\n  children: [\n    {\n      name: 'v2',\n      children: null\n    }, \n    {\n      name: 'v3',\n      children: null\n    }, \n    {\n      name: 'v4',\n      children: [\n        {\n          name: 'v5',\n          children: null\n        }\n      ]\n    }\n  ]\n};\n\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node.name];\n  var parentElement = parent ? document.forms[0][parent.name] : null;\n  \n  parent && (formElement.disabled = !parentElement.checked || parentElement.disabled);\n  \n  if (node.children) {\n    node.children.forEach(function(childNode) {\n      preorder(childNode, node);\n    });\n  }\n};\n\n\npreorder(formDeps, null);\n\n\ndocument.forms[0].onchange = function() {\n  preorder(formDeps, null);\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":7,"column":0},"end":{"row":9,"column":0}}],"css":[{"start":{"row":47,"column":0},"end":{"row":47,"column":0},"cursor":{"row":47,"column":0},"desiredColumn":null,"marker":36},{"start":{"row":8,"column":7},"end":{"row":8,"column":7},"cursor":{"row":8,"column":7},"desiredColumn":null,"marker":50}]},"zoom":1},{"active_editor":1,"description":"<p>Такую оптимизацию можно сделать, например, придав дереву плоскую структуру. Обратите внимание, что в полученном дереве сохранились все связи, просто каждый элемент можно получить по прямой ссылке. Теперь, когда у нас есть прямой доступ к любому элементу дерева, мы можем запускать обход в глубину начиная с любого узла. В рамках нашей задачи это помогает не проверять зависимости во всей структуре, а только начиная с изменившегося элемента</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  'v1': ['v2', 'v3', 'v4'],\n  'v2': null,\n  'v3': null,\n  'v4': ['v5'],\n  'v5': null\n};\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node];\n  console.log(formElement);\n\n  if (parent) {\n    var parentElement = document.forms[0][parent];\n    formElement.disabled = !parentElement.checked || parentElement.disabled;\n  }\n\n  if (formDeps[node]) {\n    formDeps[node].forEach(function(child) {\n      preorder(child, node);\n    });\n  }\n};\n\n\npreorder('v1', null)\n\n\ndocument.forms[0].onchange = function(evt) {\n  preorder(evt.target.id, null);\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":3,"column":0},"end":{"row":10,"column":0}}],"css":[{"start":{"row":28,"column":0},"end":{"row":28,"column":0}}]},"zoom":1},{"active_editor":1,"description":"<p>Это ещё одна особенность использования деревьев в коде — не существует единственно правильного способа описать дерево и структуру можно адаптировать под задачу. Например, плоский способ хранения элементов в дереве удобен, когда нужен доступ к каждому из узлов дерева. С другой стороны, иногда удобно хранить деревья в виде одной большой записи с иерархической структурой, чтобы данные можно было удобно сериализовать и десериализовать для передачи по сети или хранения в виде строки</p>","editors":{"html":"<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title></title>\n</head>\n<body>\n\n<form>\n  <h2>Нужна доставка</h2>\n  <fieldset>\n    <input type=\"checkbox\" name=\"v1\" id=\"v1\" /><label for=\"v1\">Доставить букет цветов</label>\n    \n    <fieldset>\n      <input type=\"checkbox\" name=\"v2\" id=\"v2\" /><label for=\"v2\">Сделать фотографию</label><br>\n      <input type=\"checkbox\" name=\"v3\" id=\"v3\" /><label for=\"v3\">Подарить мягкую игрушку</label><br>\n      <input type=\"checkbox\" name=\"v4\" id=\"v4\" /><label for=\"v4\">Вложить в букет открытку</label><br>\n      <fieldset>\n        <input type=\"text\" class=\"text\" placeholder=\"Текст на открытке\" name=\"v5\" />\n      </fieldset>\n    </fieldset>\n  </fieldset>\n</form>\n\n</body>\n</html>\n","js":"'use strict';\n\n\nvar formDeps = {\n  'v1': ['v2', 'v3', 'v4'],\n  'v2': null,\n  'v3': null,\n  'v4': ['v5'],\n  'v5': null\n};\n\nvar preorder = function(node, parent) {\n  var formElement = document.forms[0][node];\n\n  if (parent) {\n    var parentElement = document.forms[0][parent];\n    formElement.disabled = !parentElement.checked || parentElement.disabled;\n  }\n\n  if (formDeps[node]) {\n    formDeps[node].forEach(function(child) {\n      preorder(child, node);\n    });\n  }\n};\n\n\npreorder('v1', null)\n\n\ndocument.forms[0].onchange = function(evt) {\n  preorder(evt.target.id, null);\n};\n","css":"body {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n}\n\nfieldset {\n  border: 0;\n}\n\ninput {\n  vertical-align: middle;\n}\n\ninput[type=text] {\n  font: 18px 'Helvetica Neue', Helvetica, Arial;\n  width: 20em;\n}\n\n.text[disabled] {\n  opacity: 0.3;\n}\n\nlabel[for] {\n  padding-left: 0.3em;\n}\n\ninput[disabled] + label {\n  opacity: 0.3;\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":18,"column":38},"end":{"row":18,"column":38}}],"js":[{"start":{"row":21,"column":28},"end":{"row":21,"column":28}}],"css":[{"start":{"row":14,"column":14},"end":{"row":14,"column":14}}]},"zoom":1}]}