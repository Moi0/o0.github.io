{"v":0.1,"active_step":27,"name":"","preview_type":0,"steps":[{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    \n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":2,"column":4},"end":{"row":2,"column":4}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":2,"column":28},"end":{"row":2,"column":28}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":3,"column":27},"end":{"row":3,"column":27}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":4,"column":27},"end":{"row":4,"column":27}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n    this.isActive = false;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":5,"column":26},"end":{"row":5,"column":26}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n    this.isActive = false;\n    this.hasIcon = false;\n    \n    getClassName();\n  }\n  \n  getClassName() {\n    let classes = [];\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":12,"column":21},"end":{"row":12,"column":21}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n    this.isActive = false;\n    this.hasIcon = false;\n    \n    getClassName();\n  }\n  \n  getClassName() {\n    let classes = [];\n    \n    if (this.isDisabled) classes.push('button-disabled');\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":14,"column":57},"end":{"row":14,"column":57}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n    this.isActive = false;\n    this.hasIcon = false;\n    \n    getClassName();\n  }\n  \n  getClassName() {\n    let classes = [];\n    \n    if (this.isDisabled) classes.push('button-disabled');\n    if (this.isFocused) classes.push('button-focused');\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":10,"column":0},"end":{"row":10,"column":0}}],"js":[{"start":{"row":15,"column":55},"end":{"row":15,"column":55}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n    <div style=\"font-size: 400%\">ðŸ‘‹<span style=\"font-size: 170%\">ðŸ‘³</span></div>\n\n  </body>\n</html>\n","js":"class UXComponent {\n  constructor() {\n    this.isDisabled = false;\n    this.isFocused = false;\n    this.isHovered = false;\n    this.isActive = false;\n    this.hasIcon = false;\n    \n    getClassName();\n  }\n  \n  getClassName() {\n    let classes = [];\n    \n    if (this.isDisabled) classes.push('button-disabled');\n    if (this.isFocused) classes.push('button-focused');\n    if (this.isHovered) classes.push('button-hovered');\n    if (this.isActive) classes.push('button-active');\n    if (this.hasIcon) classes.push('button-hasicon');\n    \n    return classes;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":28},"end":{"row":8,"column":28}}],"js":[{"start":{"row":20,"column":19},"end":{"row":20,"column":19}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      \n    };\n  }\n  \n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":3,"column":6},"end":{"row":3,"column":6}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01\n    };\n  }\n  \n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":4,"column":6},"end":{"row":4,"column":6}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02\n    };\n  }\n  \n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":5,"column":6},"end":{"row":5,"column":6}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":8,"column":6},"end":{"row":8,"column":6}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    \n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":12,"column":4},"end":{"row":12,"column":4}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([]);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":12,"column":20},"end":{"row":12,"column":20}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled']\n    ]);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":13,"column":51},"end":{"row":13,"column":51}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused']\n    ]);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":14,"column":49},"end":{"row":14,"column":49}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":19,"column":3},"end":{"row":19,"column":3}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":22,"column":73},"end":{"row":22,"column":73}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":27,"column":4},"end":{"row":27,"column":4}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n    UXComponent.StateClassName.forEach((classname, state) => {\n      \n    });\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":29,"column":6},"end":{"row":29,"column":6}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n    UXComponent.StateClassName.forEach((classname, state) => {\n      if (!!(this.state & state)) {\n        \n      }\n    });\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":30,"column":8},"end":{"row":30,"column":8}}]},"zoom":1},{"active_editor":0,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n    UXComponent.StateClassName.forEach((classname, state) => {\n      if (!!(this.state & state)) {\n        classnames.push(classname);\n      }\n    });\n  }\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":6,"column":0},"end":{"row":6,"column":0}}],"js":[{"start":{"row":34,"column":1},"end":{"row":34,"column":1}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n    <style>\n      body {\n        white-space: pre;\n        font-family: monospace;\n        font-size: 300%;\n      }\n    </style>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n    UXComponent.StateClassName.forEach((classname, state) => {\n      if (!!(this.state & state)) {\n        classnames.push(classname);\n      }\n    });\n    \n    return classnames.join(' ');\n  }\n}\n"},"scale":"100%","selections":{"html":[{"start":{"row":12,"column":0},"end":{"row":12,"column":0}}],"js":[{"start":{"row":36,"column":1},"end":{"row":36,"column":1}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n    <style>\n      body {\n        white-space: pre;\n        font-family: monospace;\n        font-size: 200%;\n      }\n    </style>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    let classnames = [];\n    \n    UXComponent.StateClassName.forEach((classname, state) => {\n      if (!!(this.state & state)) {\n        classnames.push(classname);\n      }\n    });\n    \n    return classnames.join(' ');\n  }\n}\n\ndocument.body.insertAdjacentHTML('beforeend', \n    new UXComponent().getClassName());\n"},"scale":"100%","selections":{"html":[{"start":{"row":9,"column":21},"end":{"row":9,"column":21}}],"js":[{"start":{"row":39,"column":4},"end":{"row":39,"column":36}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    return UXComponent.StateClassName.get(this.state);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":8,"column":0},"end":{"row":8,"column":0}}],"js":[{"start":{"row":26,"column":54},"end":{"row":26,"column":54}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n    <style>\n      body {\n        white-space: pre;\n        font-family: monospace;\n        font-size: 200%;\n      }\n    </style>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon'],\n      [UXComponent.State.HAS_ICON | UXComponent.State.DISABLED, 'item-disabled-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    return UXComponent.StateClassName.get(this.state);\n  }\n}"},"scale":"100%","selections":{"html":[{"start":{"row":12,"column":0},"end":{"row":12,"column":0}}],"js":[{"start":{"row":18,"column":7},"end":{"row":18,"column":62}}]},"zoom":1},{"active_editor":1,"description":"<p></p>","editors":{"html":"<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title></title>\n    <style>\n      body {\n        white-space: pre;\n        font-family: monospace;\n        font-size: 200%;\n      }\n    </style>\n  </head>\n  <body>\n    \n  </body>\n</html>\n","js":"class UXComponent {\n  static get State() {\n    return {\n      DISABLED: 0x01,\n      FOCUSED: 0x02,\n      HOVERED: 0x04,\n      ACTIVE: 0x08,\n      HAS_ICON: 0x10\n    };\n  }\n  \n  static get StateClassName() {\n    return new Map([\n      [UXComponent.State.DISABLED, 'item-disabled'],\n      [UXComponent.State.FOCUSED, 'item-focused'],\n      [UXComponent.State.HOVERED, 'item-hovered'],\n      [UXComponent.State.ACTIVE, 'item-active'],\n      [UXComponent.State.HAS_ICON, 'item-hasicon'],\n      [UXComponent.State.HAS_ICON | UXComponent.State.DISABLED, 'item-disabled-hasicon']\n    ]);\n  }\n  \n  constructor() {\n    this.state = UXComponent.State.DISABLED | UXComponent.State.HAS_ICON;\n  }\n  \n  getClassName() {\n    return UXComponent.StateClassName.get(this.state);\n  }\n}\n\ndocument.body.insertAdjacentHTML('beforeend', \n    new UXComponent().getClassName());\n"},"scale":"100%","selections":{"html":[{"start":{"row":12,"column":0},"end":{"row":12,"column":0}}],"js":[{"start":{"row":32,"column":4},"end":{"row":32,"column":36}}]},"zoom":1}]}